{"version":3,"sources":["Functions.js","App.js","serviceWorker.js","index.js"],"names":["wordBankHelper","ranNum1","curArr","initArr","returnValue","i","length","concat","Math","floor","random","Set","Object","toConsumableArray","a","j","_ref","shuffle","langOneArr","langTwoArr","progressWidth","langOneArrInit","langTwoArrInit","TranslationApp","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","language1","language2","translationInputValue","wordBank","inputMode","translateMode","langFrom","langTo","customListInputValue","currentList","checkAccents","getCard","bind","assertThisInitialized","handleSubmit","keyboardModehandleChange","switchInput","switchTranslationMode","showAnswerFc","archiveCard","setList","customListhandleChange","value","undefined","$","get","json","feed","entry","each","push","gsx$language1","$t","gsx$langauge2","setState","shift","initialCount","randomNum","randomNum2","success","slice","handleWordBank","getData","_this2","removeClass","hide","splice","width","show","_this3","event","target","preventDefault","inputValueRegex","toLowerCase","trim","correctAnswerRegex","normalize","replace","addClass","_this4","toggleClass","alert","spreadsheetID","click","_this5","react_default","createElement","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","href","role","aria-haspopup","aria-labelledby","onClick","Keyboard","aria-valuenow","aria-valuemin","aria-valuemax","style","onSubmit","placeholder","onChange","map","word","tabindex","data-dismiss","aria-hidden","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cddfb394.chunk.js","sourcesContent":["function shuffle(a) {\r\n    for (let i = a.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        [a[i], a[j]] = [a[j], a[i]];\r\n    } return a;\r\n}\r\nexport function wordBankHelper(ranNum1, curArr, initArr) {\r\n    var returnValue = [curArr[ranNum1]];\r\n    var i = 0;\r\n    while (returnValue.length < 4 && i < 10) {\r\n        i++;\r\n        returnValue = returnValue.concat(initArr[Math.floor(Math.random() * initArr.length)]);\r\n        returnValue = new Set(returnValue); // removes duplicates\r\n        returnValue = [...returnValue]; // converts back to array\r\n    }\r\n    return (\r\n        shuffle(returnValue)\r\n    )\r\n}","import React from 'react';\r\nimport $ from 'jquery';\r\n//import 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap/dist/js/bootstrap.js';\r\n//import logo from './logo.svg';\r\nimport './css/custom.scss';\r\nimport './css/main.scss';\r\nimport {wordBankHelper} from './Functions';\r\n\r\nconst spreadsheetID  = \"1DntQwj2nfvobtxkOExsSMm2DLHQNlzf2q48WhWlMqAM\"; // Italian\r\n//const spreadsheetID  = \"1DNL5d4bJXOdAMnWtQesxksF4aTDFjtAV5xnFVfVbc5w\"; // Spanish Full\r\n//const spreadsheetID = \"1J9qvr4HrfVHcclbiW8jOCKzDZzu-mLwn8X0ne2EMB-w\"; // Spanish Test\r\nvar langOneArr = [];\r\nvar langTwoArr = [];\r\nvar progressWidth = {};\r\nvar langOneArrInit = [];\r\nvar langTwoArrInit = [];\r\n\r\nclass TranslationApp extends React.Component {\r\n  \tconstructor(props) {\r\n    \tsuper(props);\r\n    \tthis.state = {\r\n\t\t\tlanguage1: '',\r\n\t\t\tlanguage2: '',\r\n\t\t\ttranslationInputValue: '',\r\n\t\t\twordBank: [],\r\n\t\t\tinputMode: 'Flashcard',\r\n\t\t\ttranslateMode: '1to2',\r\n\t\t\tlangFrom: '',\r\n\t\t\tlangTo: '',\r\n\t\t\tcustomListInputValue: '',\r\n\t\t\tcurrentList: '',\r\n\t\t\tcheckAccents: false\r\n    \t};\r\n\t\tthis.getCard = this.getCard.bind(this);\r\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\r\n\t\tthis.keyboardModehandleChange = this.keyboardModehandleChange.bind(this);\r\n\t\tthis.switchInput = this.switchInput.bind(this);\r\n\t\tthis.switchTranslationMode = this.switchTranslationMode.bind(this);\r\n\t\tthis.showAnswerFc = this.showAnswerFc.bind(this);\r\n\t\tthis.archiveCard = this.archiveCard.bind(this);\r\n\t\tthis.setList = this.setList.bind(this);\r\n\t\tthis.customListhandleChange = this.customListhandleChange.bind(this);\r\n\t}\r\n\t  \r\n\tgetData(value) {\r\n\t\t// Set default list\r\n\t\tif (value === undefined) {\r\n\t\t\tvalue = \"1DntQwj2nfvobtxkOExsSMm2DLHQNlzf2q48WhWlMqAM\"\r\n\t\t}\r\n\t\t$.get(\"https://spreadsheets.google.com/feeds/list/\" + value + \"/od6/public/values?alt=json\", function(json) {\r\n\t\t\tlangOneArr = [];\r\n\t\t\tlangTwoArr = [];\r\n\t\t\tprogressWidth = {};\r\n\t\t\t$(json.feed.entry).each(function(){\r\n\t\t\t\tlangOneArr.push(this.gsx$language1.$t);\r\n\t\t\t\tlangTwoArr.push(this.gsx$langauge2.$t);\r\n\t\t\t})\r\n\t\t\tthis.setState(state => ({\r\n\t\t\t\tlanguage1: langOneArr.shift(),\r\n\t\t\t\tlanguage2: langTwoArr.shift(),\r\n\t\t\t\tinitialCount: langOneArr.length,\r\n\t\t\t\trandomNum: Math.floor(Math.random() * langOneArr.length),\r\n\t\t\t\trandomNum2: (Math.floor(Math.random() * langOneArr.length) - 4),\r\n\t\t\t\tsuccess: '',\r\n\t\t\t\tcurrentList: value\r\n\t\t\t}))\r\n\t\t\tlangOneArrInit = langOneArr.slice();\r\n\t\t\tlangTwoArrInit = langTwoArr.slice();\r\n\t\t\tthis.handleWordBank();\r\n\t\t\tthis.getCard();\r\n\t\t}.bind(this)\r\n\t\t\r\n\t\t);\r\n\t}\r\n\r\n\tcomponentWillMount() {\r\n\t\tthis.getData();\r\n\t}\r\n\t\r\n\tgetCard() {\r\n\t\t$('#root').removeClass('success').removeClass('incorrect').removeClass('show-answer');\r\n\t\t$('.modal').hide();\r\n\t\tif (this.state.success === 'yes') {\r\n\t\t\tlangOneArr.splice(this.state.randomNum, 1);\r\n\t\t\tlangTwoArr.splice(this.state.randomNum, 1);\r\n\t\t}\r\n\t\tthis.setState((state, props) =>  ({\r\n\t\t\trandomNum: Math.floor(Math.random() * langOneArr.length),\r\n\t\t\trandomNum2: Math.floor(Math.random() * langOneArrInit.length),\r\n\t\t\tsuccess: '',\r\n\t\t\ttranslationInputValue: '',\r\n\t\t\tlangFrom: this.state.translateMode === '1to2' ? langOneArr : langTwoArr,\r\n\t\t\tlangTo: this.state.translateMode === '1to2' ? langTwoArr : langOneArr,\r\n\t\t}));\r\n\t\tthis.handleWordBank();\r\n\t\tprogressWidth = {\r\n\t\t\twidth: (this.state.initialCount - langOneArr.length) * (100 / this.state.initialCount) + '%'\r\n\t\t}\r\n\t\tif(langOneArr.length === 0){\r\n\t\t\t$('#success-modal').show();\r\n\t\t}\r\n\t}\r\n\r\n\tarchiveCard() {\r\n\t\tlangOneArr.splice(this.state.randomNum, 1);\r\n\t\tlangTwoArr.splice(this.state.randomNum, 1);\r\n\t\t$('#root').removeClass('show-answer');\r\n\t\tthis.getCard();\r\n\t}\r\n\r\n\thandleWordBank() {\r\n\t\tthis.setState((state) => {\r\n\t\t\tif(this.state.translateMode === '1to2'){\r\n\t\t\t\treturn {\r\n\t\t\t\t\twordBank: wordBankHelper(state.randomNum, langTwoArr, langTwoArrInit)\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn {\r\n\t\t\t\t\twordBank: wordBankHelper(state.randomNum, langOneArr, langOneArrInit)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\t\r\n\tkeyboardModehandleChange(event) {\r\n\t\tthis.setState({translationInputValue: event.target.value})\r\n\t}\r\n\t\r\n\thandleSubmit(event) {\r\n\t\tevent.preventDefault();\r\n\t\tvar inputValueRegex = this.state.translationInputValue.toLowerCase().trim();\r\n\t\tvar correctAnswerRegex = this.state.langTo[this.state.randomNum].toLowerCase().trim()\r\n\t\tif(this.state.checkAccents === false) {\r\n\t\t\tinputValueRegex = inputValueRegex.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\r\n\t\t\tcorrectAnswerRegex = correctAnswerRegex.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\r\n\t\t}\r\n\t\tif (this.state.success === 'yes' || $('.success, .incorrect')[0]) {\r\n\t\t\tthis.getCard();\r\n\t\t}\r\n\t\telse if (inputValueRegex === correctAnswerRegex) {\r\n\t\t\t$('#root').addClass('success');\r\n\t\t\tthis.setState({success: 'yes'})\r\n\t\t}  else {\r\n\t\t\t$('#root').addClass('incorrect');\r\n\t\t}\r\n\t}\r\n\r\n\tswitchInput(value) {\r\n\t\tif(value === 'Wordbank' && this.state.inputMode !== 'Wordbank'){\r\n\t\t\tthis.setState({\r\n\t\t\t\tinputMode: 'Wordbank'\r\n\t\t\t})\r\n\t\t} else if(value === 'Keyboard' && this.state.inputMode !== 'Keyboard'){\r\n\t\t\tthis.setState({\r\n\t\t\t\tinputMode: 'Keyboard'\r\n\t\t\t})\r\n\t\t} else if(value === 'Flashcard' && this.state.inputMode !== 'Flashcard'){\r\n\t\t\tthis.setState({\r\n\t\t\t\tinputMode: 'Flashcard'\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tswitchTranslationMode() {\r\n\t\tif(this.state.translateMode === '1to2'){\r\n\t\t\tthis.setState({\r\n\t\t\t\ttranslateMode: '2to1'\r\n\t\t\t}, () => {\r\n\t\t\t\tthis.getCard();\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tthis.setState({\r\n\t\t\t\ttranslateMode: '1to2'\r\n\t\t\t}, () => {\r\n\t\t\t\tthis.getCard();\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tshowAnswerFc() {\r\n\t\t$('#root').toggleClass('show-answer');\r\n\t}\r\n\r\n\tsetList(value) {\r\n\t\tif (value === 'es-basics') {\r\n\t\t\tconst spreadsheetID = \"1DNL5d4bJXOdAMnWtQesxksF4aTDFjtAV5xnFVfVbc5w\";\r\n\t\t\tthis.getData(spreadsheetID);\r\n\t\t\tthis.getCard();\r\n\t\t\talert('List Changed to Spanish Basics')\r\n\t\t} else if (value === 'it-basics') {\r\n\t\t\tconst spreadsheetID  = \"1DntQwj2nfvobtxkOExsSMm2DLHQNlzf2q48WhWlMqAM\";\r\n\t\t\tthis.getData(spreadsheetID);\r\n\t\t\talert('List Changed to Italian Basics')\r\n\t\t} else if (value === 'it-other') {\r\n\t\t\tconst spreadsheetID  = \"16PNgsOyvfz6BIpjCqHMtMWBg59qLhyj5TVvmXzSzmPA\";\r\n\t\t\tthis.getData(spreadsheetID);\r\n\t\t\talert('List Changed to Italian Other')\r\n\t\t} else if (value === 'test') {\r\n\t\t\tconst spreadsheetID  = \"1_qux2HIN3GhyYmaDF2KCg1JAAoe8c6xhPV228mR5hq8\";\r\n\t\t\tthis.getData(spreadsheetID);\r\n\t\t\talert('List Changed to Test List')\r\n\t\t} else {\r\n\t\t\tconst spreadsheetID = value;\r\n\t\t\tthis.getData(spreadsheetID);\r\n\t\t\t$('#close-custom-list-modal').click();\r\n\t\t\talert('List Changed to custom list')\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tcustomListhandleChange(event) {\r\n\t\tthis.setState({customListInputValue: event.target.value})\r\n\t}\r\n\t\r\n\trender() {\r\n    \treturn (\r\n\t\t\t<div className={\"container main-container \" + this.state.inputMode}>\r\n\t\t\t\t{/* \r\n\t\t\t\t----------------------- Top Navigation -----------------------\r\n\t\t\t\t */}\r\n\t\t\t\t<nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n\t\t\t\t\t<button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n\t\t\t\t\t\t<span className=\"navbar-toggler-icon\"></span>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n\t\t\t\t\t\t<ul className=\"navbar-nav\">\r\n\t\t\t\t\t\t\t{/* <li className=\"nav-item active\">\r\n\t\t\t\t\t\t\t\t<a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\r\n\t\t\t\t\t\t\t</li> */}\r\n\t\t\t\t\t\t\t<li className=\"nav-item dropdown\">\r\n\t\t\t\t\t\t\t\t<a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdownMenuLink\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Select List</a>\r\n\t\t\t\t\t\t\t\t<div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\r\n\t\t\t\t\t\t\t\t\t<span className=\"dropdown-item\"  onClick={(value) => this.setList('it-basics')}>Italian Basics</span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"dropdown-item\" onClick={(value) => this.setList('it-other')}>Italian Other</span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"dropdown-item\" onClick={(value) => this.setList('es-basics')}>Spanish</span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"dropdown-item\" onClick={(value) => this.setList('test')}>Test List</span>\r\n\t\t\t\t\t\t\t\t\t<button type=\"button\" className=\"dropdown-item\" data-toggle=\"modal\" data-target=\"#custom-list-modal\">Load Custom</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li className=\"nav-item dropdown\">\r\n\t\t\t\t\t\t\t\t<a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdownMenuLink\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Input Mode</a>\r\n\t\t\t\t\t\t\t\t<div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\r\n\t\t\t\t\t\t\t\t\t<span className=\"dropdown-item\" onClick={(Keyboard) => this.switchInput('Flashcard')}>Flashcard</span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"dropdown-item\" onClick={(Keyboard) => this.switchInput('Keyboard')}>Keyboard</span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"dropdown-item\" onClick={(Keyboard) => this.switchInput('Wordbank')}>Wordbank</span>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</nav>\r\n\t\t\t\t{/* \r\n\t\t\t\t----------------------- Progress Bar -----------------------\r\n\t\t\t\t */}\r\n\t\t\t\t<div className=\"container progress-container\">\r\n\t\t\t\t\t<div className=\"progress\">\r\n\t\t\t\t\t\t<div className=\"progress-bar progress-bar-striped active\"  role=\"progressbar\" aria-valuenow={this.state.initialCount - langOneArr.length} aria-valuemin=\"0\" aria-valuemax={this.state.initialCount} style={progressWidth} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<span>{langOneArr.length} out of {this.state.initialCount} words left</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t{/* \r\n\t\t\t\t----------------------- Form -----------------------\r\n\t\t\t\t */}\r\n\t\t\t\t<form onSubmit={this.handleSubmit} id=\"form\">\r\n\t\t\t\t\t<h3 onClick={this.switchTranslationMode}>Translate to <span>{this.state.translateMode === \"1to2\" ? this.state.language1 : this.state.language2}</span>:</h3>\r\n\t\t\t\t\t<h1 className=\"lang-from\" onClick={this.state.inputMode === 'Flashcard' ? this.showAnswerFc : ''}>\"{this.state.langFrom[this.state.randomNum]}\"</h1>\r\n\t\t\t\t\t{this.state.inputMode === 'Flashcard' && [\r\n\t\t\t\t\t\t<h1 className=\"lang-to\" onClick={this.showAnswerFc}>\"{this.state.langTo[this.state.randomNum]}\"</h1>,\r\n\t\t\t\t\t\t<i className=\"material-icons swap-card\" onClick={this.showAnswerFc}>swap_vertical_circle</i>,\r\n\t\t\t\t\t\t<span className=\"navigate-next\" onClick={this.getCard}><i className=\"material-icons\">navigate_next</i></span>,\r\n\t\t\t\t\t\t<span className=\"archive\" onClick={this.archiveCard}><i className=\"material-icons\">archive</i></span>\r\n\t\t\t\t\t]}\r\n\t\t\t\t\t{<input type=\"text\" placeholder=\"Enter translation\" value={this.state.translationInputValue} onChange={this.keyboardModehandleChange} className=\"form-control\" />}\r\n\t\t\t\t\t<div className=\"list-group word-bank\">\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.state.wordBank.map((word) =>\r\n\t\t\t\t\t\t<button type=\"button\" className=\"list-group-item\" value={word}  onClick={this.keyboardModehandleChange}>{word} <a className=\"google-translate\" href={\"https://translate.google.com/#view=home&textMi%20chaimo%20Tim&text=\" + word + \"&op=translate&sl=it&tl=en\"} target=\"_blank\"><i className=\"material-icons\">\r\n\t\t\t\t\t\tg_translate</i></a></button>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t\t<div className=\"button-container\">\r\n\t\t\t\t\t<button type=\"button\" onClick={this.getCard} className=\"btn btn-lg btn-left btn-light\">Skip</button>\r\n\t\t\t\t\t<button type=\"submit\" value=\"submit\" className=\"btn btn-lg btn-primary btn-right\" onClick={this.handleSubmit}>Submit</button>\r\n\t\t\t\t\t<div className=\"alert alert-success container-fluid\">\r\n\t\t\t\t\t\t<div className=\"message\">\r\n\t\t\t\t\t\t\t<h4>Correct:</h4>\r\n\t\t\t\t\t\t\t<span>{this.state.translateMode === \"1to2\" ? langTwoArr[this.state.randomNum] : langOneArr[this.state.randomNum]}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<button type=\"button\" onClick={this.getCard} className=\"btn btn-success btn-lg\">Continue</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"alert alert-danger container-fluid\">\r\n\t\t\t\t\t\t<div className=\"message\">\r\n\t\t\t\t\t\t\t<h4>Correct answer:</h4>\r\n\t\t\t\t\t\t\t<span>{this.state.translateMode === \"1to2\" ? langTwoArr[this.state.randomNum] : langOneArr[this.state.randomNum]}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<button type=\"button\" onClick={this.getCard} className=\"btn btn-danger btn-lg\">Continue</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t{/* \r\n\t\t\t\t----------------------- Modals --------------------\r\n\t\t\t\t */}\r\n\t\t\t\t<div className=\"modals\">\r\n\t\t\t\t\t{/* Set Custom List Modal */}\r\n\t\t\t\t\t<div className=\"modal\" id=\"custom-list-modal\" tabindex=\"-1\" role=\"dialog\">\r\n\t\t\t\t\t\t<div className=\"modal-dialog\" role=\"document\">\r\n\t\t\t\t\t\t\t<div className=\"modal-content\">\r\n\t\t\t\t\t\t\t<div className=\"modal-header\">\r\n\t\t\t\t\t\t\t\t<h5 className=\"modal-title\">Load Custom List</h5>\r\n\t\t\t\t\t\t\t\t<button type=\"button\" className=\"close\" id=\"close-custom-list-modal\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n\t\t\t\t\t\t\t\t<span aria-hidden=\"true\">&times;</span>\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"modal-body\">\r\n\t\t\t\t\t\t\t\t<p>Enter list ID from Google Sheets Document.</p>\r\n\t\t\t\t\t\t\t\t<input value={this.state.customListInputValue} onChange={this.customListhandleChange} placeholder=\"ID Here\"></input>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"modal-footer\">\r\n\t\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={(value) => this.setList(this.state.customListInputValue)}>Load</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{/* Success Modal */}\r\n\t\t\t\t\t<div className=\"modal\" id=\"success-modal\" tabindex=\"-1\" role=\"dialog\">\r\n\t\t\t\t\t\t<div className=\"modal-dialog modal-lg modal-dialog-centered\" role=\"document\">\r\n\t\t\t\t\t\t\t<div className=\"modal-content\">\r\n\t\t\t\t\t\t\t<div className=\"modal-header\">\r\n\t\t\t\t\t\t\t\t<h5 className=\"modal-title\">Congralutations!</h5>\r\n\t\t\t\t\t\t\t\t{/* <button type=\"button\" className=\"close\" id=\"close-custom-list-modal\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n\t\t\t\t\t\t\t\t<span aria-hidden=\"true\">&times;</span>\r\n\t\t\t\t\t\t\t\t</button> */}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"modal-body\">\r\n\t\t\t\t\t\t\t\t<h3>You've finished the list!</h3>\r\n\t\t\t\t\t\t\t\t<button className=\"btn btn-secondary\"  onClick={(value) => this.getData(this.state.currentList)}>Repeat List</button>\r\n\t\t\t\t\t\t\t\t<div className=\"dropdown\">\r\n\t\t\t\t\t\t\t\t\t<button className=\"btn btn-primary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Select New</button>\r\n\t\t\t\t\t\t\t\t\t<div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"dropdown-item\"  onClick={(value) => this.setList('it-basics')}>Italian Basics</span>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"dropdown-item\" onClick={(value) => this.setList('it-other')}>Italian Other</span>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"dropdown-item\" onClick={(value) => this.setList('es-basics')}>Spanish</span>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"dropdown-item\" onClick={(value) => this.setList('test')}>Test List</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default TranslationApp;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport TranslationApp from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<TranslationApp />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}