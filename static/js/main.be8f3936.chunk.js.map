{"version":3,"sources":["Functions.js","App.js","serviceWorker.js","index.js"],"names":["wordBankHelper","ranNum1","ranNum2","curArr","initArr","a","i","length","j","Math","floor","random","_ref","shuffle","slice","concat","langOneArr","langTwoArr","progressWidth","langOneArrInit","langTwoArrInit","TranslationApp","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","language1","language2","inputValue","wordBank","inputMode","getCard","bind","assertThisInitialized","handleSubmit","handleChange","switchInput","$","get","json","feed","entry","each","push","gsx$language1","$t","gsx$langauge2","setState","shift","initialCount","randomNum","randomNum2","success","handleWordBank","removeClass","splice","width","randomnNum2","event","target","value","preventDefault","toLowerCase","trim","addClass","toggleClass","getData","_this2","react_default","createElement","className","role","aria-valuenow","aria-valuemin","aria-valuemax","style","onSubmit","id","type","placeholder","onChange","map","word","onClick","href","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.be8f3936.chunk.js","sourcesContent":["function shuffle(a) {\r\n    for (let i = a.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        [a[i], a[j]] = [a[j], a[i]];\r\n    } return a;\r\n}\r\nexport function wordBankHelper(ranNum1, ranNum2, curArr, initArr) {\r\n    return (\r\n        shuffle(initArr.slice(ranNum2, 3).concat(curArr[ranNum1]))\r\n    )\r\n}","import React from 'react';\nimport $ from 'jquery';\nimport 'bootstrap/dist/css/bootstrap.css';\n//import logo from './logo.svg';\nimport './App.scss';\n// import {shuffle} from './Functions';\nimport {wordBankHelper} from './Functions';\n\nconst spreadsheetID  = \"1DntQwj2nfvobtxkOExsSMm2DLHQNlzf2q48WhWlMqAM\"; // Italian\n//const spreadsheetID  = \"1DNL5d4bJXOdAMnWtQesxksF4aTDFjtAV5xnFVfVbc5w\"; // Spanish Full\n//const spreadsheetID = \"1J9qvr4HrfVHcclbiW8jOCKzDZzu-mLwn8X0ne2EMB-w\"; // Spanish Test\nvar langOneArr = [];\nvar langTwoArr = [];\nvar progressWidth = {};\nvar langOneArrInit = [];\nvar langTwoArrInit = [];\n\nclass TranslationApp extends React.Component {\n  \tconstructor(props) {\n    \tsuper(props);\n    \tthis.state = {\n\t\t\tlanguage1: '',\n\t\t\tlanguage2: '',\n\t\t\tinputValue: '',\n\t\t\twordBank: [],\n\t\t\tinputMode: 'Word Bank'\n    \t};\n\t\tthis.getCard = this.getCard.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.switchInput = this.switchInput.bind(this);\n\t}\n\t  \n\tgetData() {\n\t\t$.get(\"https://spreadsheets.google.com/feeds/list/\" + spreadsheetID + \"/od6/public/values?alt=json\", function(json) {\n\t\t\t$(json.feed.entry).each(function(){\n\t\t\t\tlangOneArr.push(this.gsx$language1.$t);\n\t\t\t\tlangTwoArr.push(this.gsx$langauge2.$t);\n\t\t\t})\n\t\t\tthis.setState(state => ({\n\t\t\t\tlanguage1: langOneArr.shift(),\n\t\t\t\tlanguage2: langTwoArr.shift(),\n\t\t\t\tinitialCount: langOneArr.length,\n\t\t\t\trandomNum: Math.floor(Math.random() * langOneArr.length),\n\t\t\t\trandomNum2: (Math.floor(Math.random() * langOneArr.length) - 4),\n\t\t\t\tsuccess: ''\n\t\t\t}))\n\t\t\tlangOneArrInit = langOneArr;\n\t\t\tlangTwoArrInit = langTwoArr;\n\t\t\tthis.handleWordBank();\n\t\t}.bind(this));\n\t}\n\t\n\tgetCard() {\n\t\t$('#root').removeClass('success').removeClass('incorrect');\n\t\tif (this.state.success === 'yes') {\n\t\t\tlangOneArr.splice(this.state.randomNum, 1);\n\t\t\tlangTwoArr.splice(this.state.randomNum, 1);\n\t\t}\n\t\tthis.setState((state, props) =>  ({\n\t\t\trandomNum: Math.floor(Math.random() * langOneArr.length),\n\t\t\trandomNum2: Math.floor(Math.random() * langOneArrInit.length),\n\t\t\tsuccess: '',\n\t\t\tinputValue: ''\n\t\t}));\n\t\tthis.handleWordBank();\n\t\tprogressWidth = {\n\t\t\twidth: (this.state.initialCount - langOneArr.length) * (100 / this.state.initialCount) + '%'\n\t\t}\n\t}\n\n\thandleWordBank() {\n\t\tthis.setState((state) => {\n\t\t\t// return {\n\t\t\t// \twordBank: shuffle(langTwoArr.slice(state.randomNum2, state.randomNum2 + 3).concat(langTwoArr[state.randomNum]))\n\t\t\t// }\n\t\t\treturn {\n\t\t\t\twordBank: wordBankHelper(state.randomNum,  state.randomnNum2, langTwoArr, langTwoArrInit)\n\t\t\t}\n\t\t})\n\t}\n\t\n\thandleChange(event) {\n\t\tthis.setState({inputValue: event.target.value})\n\t}\n\t\n\thandleSubmit(event) {\n\t\tevent.preventDefault();\n\t\tif (this.state.success === 'yes' || $('.success, .incorrect')[0]) {\n\t\t\tthis.getCard();\n\t\t}\n\t\telse if (this.state.inputValue.toLowerCase().trim() === langTwoArr[this.state.randomNum].toLowerCase().trim()) {\n\t\t\t$('#root').addClass('success');\n\t\t\tthis.setState({success: 'yes'})\n\t\t}  else {\n\t\t\t$('#root').addClass('incorrect');\n\t\t}\n\t}\n\n\tswitchInput() {\n\t\t$('.form-control, .word-bank').toggleClass('d-none');\n\t\tif(this.state.inputMode === 'Word Bank'){\n\t\t\tthis.setState({\n\t\t\t\tinputMode: 'Keyboard'\n\t\t\t})\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tinputMode: 'Word Bank'\n\t\t\t})\n\t\t}\n\t}\n\n\tcomponentWillMount() {\n\t\tthis.getData();\n\t\tthis.getCard();\n\t}\n\t\n\trender() {\n    \treturn (\n\t\t\t<div className=\"container main-container\">\n\t\t\t\t<div className=\"container progress-container\">\n\t\t\t\t\t<div className=\"progress\">\n\t\t\t\t\t\t<div className=\"progress-bar progress-bar-striped active\"  role=\"progressbar\" aria-valuenow={this.state.initialCount - langOneArr.length} aria-valuemin=\"0\" aria-valuemax={this.state.initialCount} style={progressWidth}></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<span>{langOneArr.length} out of {this.state.initialCount} words left</span>\n\t\t\t\t</div>\n\t\t\t\t<form onSubmit={this.handleSubmit} id=\"form\">\n\t\t\t\t\t<h3>Translate to {this.state.language2}:</h3>\n\t\t\t\t\t<h1>\"{langOneArr[this.state.randomNum]}\"</h1>\n\t\t\t\t\t{<input type=\"text\" placeholder=\"Enter translation\" value={this.state.inputValue} onChange={this.handleChange} className=\"form-control d-none\"></input>}\n\t\t\t\t\t<div className=\"list-group word-bank\">\n\t\t\t\t\t\t{\n\t\t\t\t\t\tthis.state.wordBank.map((word) =>\n\t\t\t\t\t\t<button type=\"button\" className=\"list-group-item\" value={word}  onClick={this.handleChange}>{word} <a href={\"https://translate.google.com/#view=home&textMi%20chaimo%20Tim&text=\" + word + \"&op=translate&sl=it&tl=en\"} target=\"_blank\">GT</a></button>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t\t<div className=\"button-container\">\n\t\t\t\t\t<button type=\"button\" onClick={this.getCard} className=\"btn btn-lg btn-left\">Skip</button>\n\n\t\t\t\t\t<button className=\"btn btn-lg btn-center btn-outline-secondary\" onClick={this.switchInput}>{this.state.inputMode === 'Word Bank' ? 'Keyboard' : 'Word Bank'}</button>\n\n\t\t\t\t\t<button type=\"submit\" value=\"submit\" className=\"btn btn-lg btn-primary btn-right\" onClick={this.handleSubmit}>Submit</button>\n\t\t\t\t\t<div className=\"alert alert-success container-fluid\">\n\t\t\t\t\t\t<div className=\"message\">\n\t\t\t\t\t\t\t<h4>Correct:</h4>\n\t\t\t\t\t\t\t<span>{langTwoArr[this.state.randomNum]}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<button type=\"button\" onClick={this.getCard} className=\"btn btn-success btn-lg\">Continue</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"alert alert-danger container-fluid\">\n\t\t\t\t\t\t<div className=\"message\">\n\t\t\t\t\t\t\t<h4>Correct answer:</h4>\n\t\t\t\t\t\t\t<span>{langTwoArr[this.state.randomNum]}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<button type=\"button\" onClick={this.getCard} className=\"btn btn-danger btn-lg\">Continue</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default TranslationApp;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport TranslationApp from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<TranslationApp />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}